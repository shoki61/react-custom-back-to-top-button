{"version":3,"file":"index.js","sources":["../src/index.tsx"],"sourcesContent":["import * as React from 'react'\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport './style.scss';\r\n\r\nconst { useState } = React\r\n\r\nexport type IButtonProps = {\r\n    className?: string,\r\n    toShow?: number,\r\n    fontSize?: number | string,\r\n    showIcon?: boolean,\r\n    width?: number | string,\r\n    height?: number | string,\r\n    bottom?: number | string,\r\n    right?: number | string,\r\n    left?: number | string,\r\n    icon?: HTMLElement,\r\n    style?: object,\r\n    backgroundColor?: string,\r\n    color?: string,\r\n    borderRadius?: number | string,\r\n    children?: any\r\n}\r\n\r\nconst App: React.FC<IButtonProps> = ({ \r\n    className = '', \r\n    toShow = 300,\r\n    fontSize = 16, \r\n    showIcon = true, \r\n    width = '3rem', \r\n    height = '3rem', \r\n    bottom = 45, \r\n    right = 45, \r\n    left = '', \r\n    icon = <KeyboardArrowUpIcon style={{fontSize: 25}}/>,\r\n    style = {}, \r\n    backgroundColor = '#363636',\r\n    color = '#fff', \r\n    borderRadius = 100,\r\n    children = null \r\n}) => {\r\n  const [show, setShow] = useState(false)\r\n\r\n  const backToTop = () =>  window.scrollTo({top: 0, left: 0, behavior: 'smooth'});\r\n\r\n  const handleScroll = () => setShow( window.scrollY > toShow );\r\n\r\n  window.addEventListener('scroll', handleScroll);\r\n\r\n  return <CSSTransition\r\n            in={show}\r\n            timeout={200}\r\n            classNames=\"backToTopButton\"\r\n            unmountOnExit\r\n        >\r\n            <button \r\n                style={{\r\n                backgroundColor, \r\n                color, \r\n                borderRadius, \r\n                fontSize,\r\n                width,\r\n                height,\r\n                right,\r\n                left,\r\n                bottom,\r\n                ...style,\r\n            }} \r\n            className={`CustomBackToTopButton ${className}`}\r\n            onClick={backToTop}\r\n            >\r\n                {showIcon && icon}\r\n                {children}\r\n            </button>\r\n        </CSSTransition>\r\n};\r\n\r\nexport default App;"],"names":["React","KeyboardArrowUpIcon","CSSTransition"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKQ,IAAA,QAAQ,GAAKA,gBAAK,SAAV,CAAU;IAoBpB,GAAG,GAA2B,UAAC,EAgBpC;QAfG,iBAAc,EAAd,SAAS,mBAAG,EAAE,KAAA,EACd,cAAY,EAAZ,MAAM,mBAAG,GAAG,KAAA,EACZ,gBAAa,EAAb,QAAQ,mBAAG,EAAE,KAAA,EACb,gBAAe,EAAf,QAAQ,mBAAG,IAAI,KAAA,EACf,aAAc,EAAd,KAAK,mBAAG,MAAM,KAAA,EACd,cAAe,EAAf,MAAM,mBAAG,MAAM,KAAA,EACf,cAAW,EAAX,MAAM,mBAAG,EAAE,KAAA,EACX,aAAU,EAAV,KAAK,mBAAG,EAAE,KAAA,EACV,YAAS,EAAT,IAAI,mBAAG,EAAE,KAAA,EACT,YAAoD,EAApD,IAAI,mBAAGA,+BAACC,uCAAmB,IAAC,KAAK,EAAE,EAAC,QAAQ,EAAE,EAAE,EAAC,GAAG,KAAA,EACpD,aAAU,EAAV,KAAK,mBAAG,EAAE,KAAA,EACV,uBAA2B,EAA3B,eAAe,mBAAG,SAAS,KAAA,EAC3B,aAAc,EAAd,KAAK,mBAAG,MAAM,KAAA,EACd,oBAAkB,EAAlB,YAAY,mBAAG,GAAG,KAAA,EAClB,gBAAe,EAAf,QAAQ,mBAAG,IAAI,KAAA;IAEX,IAAA,KAAkB,QAAQ,CAAC,KAAK,CAAC,EAAhC,IAAI,QAAA,EAAE,OAAO,QAAmB,CAAA;IAEvC,IAAM,SAAS,GAAG,cAAO,OAAA,MAAM,CAAC,QAAQ,CAAC,EAAC,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAC,CAAC,GAAA,CAAC;IAEhF,IAAM,YAAY,GAAG,cAAM,OAAA,OAAO,CAAE,MAAM,CAAC,OAAO,GAAG,MAAM,CAAE,GAAA,CAAC;IAE9D,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;IAEhD,OAAOD,+BAACE,kCAAa,IACX,EAAE,EAAE,IAAI,EACR,OAAO,EAAE,GAAG,EACZ,UAAU,EAAC,iBAAiB,EAC5B,aAAa;QAEbF,2CACI,KAAK,aACL,eAAe,iBAAA;gBACf,KAAK,OAAA;gBACL,YAAY,cAAA;gBACZ,QAAQ,UAAA;gBACR,KAAK,OAAA;gBACL,MAAM,QAAA;gBACN,KAAK,OAAA;gBACL,IAAI,MAAA;gBACJ,MAAM,QAAA,IACH,KAAK,GAEZ,SAAS,EAAE,2BAAyB,SAAW,EAC/C,OAAO,EAAE,SAAS;YAEb,QAAQ,IAAI,IAAI;YAChB,QAAQ,CACJ,CACG,CAAA;AACxB;;;;"}